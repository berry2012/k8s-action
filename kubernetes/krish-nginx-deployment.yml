apiVersion: v1
kind: Namespace
metadata:
  name: "demo"
  labels:
    pod-security.kubernetes.io/audit: restricted
    pod-security.kubernetes.io/enforce: baseline 
    pod-security.kubernetes.io/warn: restricted    
---  
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "demo-nginx-deployment"
  namespace: "demo"
spec:
  selector:
    matchLabels:
      app: "demo-nginx"
  replicas: 1
  template:
    metadata:
      labels:
        app: "demo-nginx"
        role: "backend"
    spec:
      dnsPolicy: Default # "Default" is not the true default value
      enableServiceLinks: false    # Disable service discovery
      automountServiceAccountToken: false
      securityContext:
        seccompProfile:
          type: RuntimeDefault
        # runAsNonRoot: true # It is possible to run the image as a less privileged arbitrary UID/GID. This, however, requires modification of nginx configuration to use directories writeable by that specific UID/GID pair and then store the config where kubernetes can fetch it.
        # runAsUser: 101   # from https://gallery.ecr.aws/nginx/nginx
        # runAsGroup: 101      
      containers:
      - image: public.ecr.aws/nginx/nginx:latest
        imagePullPolicy: Always
        name: "demo-nginx"
        resources:
          requests:
           memory: "64Mi"
           cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
              - NET_RAW  
              # - ALL # causes nginx to fail        
        ports:
        - containerPort: 80
        command: ["/bin/sh"]
        args: ["-c", "echo PodName: $MY_POD_NAME  NodeName: $MY_NODE_NAME  podIP: $MY_POD_IP> /usr/share/nginx/html/index.html && exec nginx -g 'daemon off;'"]       
        env:
        - name: MY_NODE_NAME
          valueFrom:
           fieldRef:
            fieldPath: spec.nodeName
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        volumeMounts:
        - name: cache
          mountPath: /var/cache/nginx
        - name: usr
          mountPath: /var/run    
        - name: tmp
          mountPath: /usr/share/nginx/html                       
      volumes:
        - name: cache
          emptyDir: {}
        - name: tmp
          emptyDir: {}
        - name: usr
          emptyDir: {}
        